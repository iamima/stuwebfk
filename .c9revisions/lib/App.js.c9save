{"ts":1374587592160,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1374587614782,"patch":[[{"diffs":[[1,"\nfunction App(){\n\n}\n\nApp.prototype.use = function(){\n    \n}"]],"start1":0,"start2":0,"length1":0,"length2":59}]],"length":59,"saved":false}
{"ts":1374587677447,"patch":[[{"diffs":[[0,"(){\n\n}\n\n"],[1,"// 加入功能栈\n"],[0,"App.prot"]],"start1":13,"start2":13,"length1":16,"length2":25}]],"length":68,"saved":false}
{"ts":1374587690351,"patch":[[{"diffs":[[0,"unction("],[1,"middle"],[0,"){\n    \n"]],"start1":51,"start2":51,"length1":16,"length2":22}]],"length":74,"saved":false}
{"ts":1374587713380,"patch":[[{"diffs":[[0," App(){\n"],[1,"    this._middleList = [];"],[0,"\n}\n\n// 加"]],"start1":9,"start2":9,"length1":16,"length2":42}]],"length":100,"saved":false}
{"ts":1374587726806,"patch":[[{"diffs":[[0,"e){\n    "],[1,"this._middleList.push(middle);"],[0,"\n}"]],"start1":90,"start2":90,"length1":10,"length2":40}]],"length":130,"saved":false}
{"ts":1374587788673,"patch":[[{"diffs":[[1,"var http = require(\"http\");\n"],[0,"\nfunctio"]],"start1":0,"start2":0,"length1":8,"length2":36},{"diffs":[[0," App(){\n"],[1,"    // 插件有序列表\n"],[0,"    this"]],"start1":37,"start2":37,"length1":16,"length2":30}]],"length":172,"saved":false}
{"ts":1374587821880,"patch":[[{"diffs":[[0,"t = [];\n"],[1,"    this._server = http.createServer();\n"],[0,"}\n\n// 加入"]],"start1":78,"start2":78,"length1":16,"length2":56}]],"length":212,"saved":false}
{"ts":1374587915770,"patch":[[{"diffs":[[0,"h(middle);\n}"],[1,"\n\n// 监听端口\nApp.prototype.listen = function(){\n    this._server.listen.apply(this._server,arguments);\n}"]],"start1":200,"start2":200,"length1":12,"length2":113}]],"length":313,"saved":false}
{"ts":1374587965359,"patch":[[{"diffs":[[0,"t = [];\n"],[1,"    \n    // request事件响应函数\n    function handle(req,res){\n        \n    }\n    \n"],[0,"    this"]],"start1":78,"start2":78,"length1":16,"length2":92}]],"length":389,"saved":false}
{"ts":1374588009376,"patch":[[{"diffs":[[0,"s){\n        "],[1,"// 循环执行插件\n        this._middleList.forEach(function(){\n            \n        })"],[0,"\n    }\n    \n"]],"start1":138,"start2":138,"length1":24,"length2":102}]],"length":467,"saved":false}
{"ts":1374588013939,"patch":[[{"diffs":[[0,"ch(function("],[1,"middle"],[0,"){\n         "]],"start1":190,"start2":190,"length1":24,"length2":30}]],"length":473,"saved":false}
{"ts":1374588032260,"patch":[[{"diffs":[[0,"eServer("],[1,"handel"],[0,");\n}\n\n//"]],"start1":275,"start2":275,"length1":16,"length2":22}]],"length":479,"saved":false}
{"ts":1374588036872,"patch":[[{"diffs":[[0,"hand"],[-1,"e"],[0,"l"],[1,"e"],[0,");\n}"]],"start1":283,"start2":283,"length1":10,"length2":10}]],"length":479,"saved":false}
{"ts":1374588066783,"patch":[[{"diffs":[[0,"er(handle);\n"],[1,"    \n"],[0,"}\n\n// 加入功能栈\n"]],"start1":280,"start2":280,"length1":24,"length2":29}]],"length":484,"saved":false}
{"ts":1374588114176,"patch":[[{"diffs":[[0,"            "],[1,"middle(req,res,next());"],[0,"\n        })\n"]],"start1":211,"start2":211,"length1":24,"length2":47}]],"length":507,"saved":false}
{"ts":1374588407219,"patch":[[{"diffs":[[0,"    "],[-1,"this._middleList.forEach(function(middle){\n            middle(req,res,next());"],[1,"var middleIndex = 0; // 插件索引"],[0,"\n   "]],"start1":164,"start2":164,"length1":86,"length2":36},{"diffs":[[0,"    "],[-1,"})"],[0,"\n   "]],"start1":201,"start2":201,"length1":10,"length2":8}]],"length":455,"saved":false}
{"ts":1374588467076,"patch":[[{"diffs":[[0,"索引\n        \n"],[1,"        // 执行插件函数\n        function execMiddle(){\n            \n        }\n        \n        \n"],[0,"    }\n    \n "]],"start1":194,"start2":194,"length1":24,"length2":114}]],"length":545,"saved":false}
{"ts":1374588472311,"patch":[[{"diffs":[[0,"     }\n        \n"],[1,"        execMiddle();\n"],[0,"        \n    }\n "]],"start1":271,"start2":271,"length1":32,"length2":54}]],"length":567,"saved":false}
{"ts":1374588553822,"patch":[[{"diffs":[[0,"/ 插件有序列表\n   "],[1," var middleList ="],[0," this._middl"]],"start1":50,"start2":50,"length1":24,"length2":41},{"diffs":[[0,"t = [];\n"],[-1,""],[0,"    \n   "]],"start1":95,"start2":95,"length1":16,"length2":16},{"diffs":[[0,"q,res){\n"],[1,"        \n        if()\n        \n"],[0,"        "]],"start1":151,"start2":151,"length1":16,"length2":47},{"diffs":[[0,"ecMiddle(){\n"],[-1,""],[0,"            "]],"start1":291,"start2":291,"length1":24,"length2":24},{"diffs":[[0,"(){\n            "],[1,"this._middleList"],[0,"\n        }\n     "]],"start1":299,"start2":299,"length1":32,"length2":48}]],"length":631,"saved":false}
{"ts":1374588561870,"patch":[[{"diffs":[[0,"            "],[-1,"this._"],[0,"middleList\n "]],"start1":303,"start2":303,"length1":30,"length2":24}]],"length":625,"saved":false}
{"ts":1374588574064,"patch":[[{"diffs":[[0,"    if()"],[1,"{\n            \n        }"],[0,"\n       "]],"start1":172,"start2":172,"length1":16,"length2":40}]],"length":649,"saved":false}
{"ts":1374588657508,"patch":[[{"diffs":[[0," if("],[-1,"){\n            \n        }\n"],[1,"middleList.length === 0){\n            // 如果没有功能插件什么都不做。\n        }else{\n    "],[0,"    "]],"start1":175,"start2":175,"length1":34,"length2":83},{"diffs":[[0,"        "],[1," "],[1,"   "],[0,"// 循环执行插"]],"start1":263,"start2":263,"length1":16,"length2":20},{"diffs":[[0," 循环执行插件\n"],[1,"    "],[0,"        "]],"start1":277,"start2":277,"length1":16,"length2":20},{"diffs":[[0,"        "],[-1,"\n"],[1,"    \n   "],[0,"        "],[1," "],[0,"// 执行插件函"]],"start1":326,"start2":326,"length1":25,"length2":33},{"diffs":[[0," 执行插件函数\n"],[1,"    "],[0,"        "]],"start1":353,"start2":353,"length1":16,"length2":20},{"diffs":[[0,"        "],[1,"  "],[1,"  "],[0,"middleLi"]],"start1":400,"start2":400,"length1":16,"length2":20},{"diffs":[[0,"ddleList"],[-1,"\n"],[1,"(req,res)\n   "],[0,"        "],[1," "],[0,"}\n      "]],"start1":414,"start2":414,"length1":25,"length2":38},{"diffs":[[0,"        "],[-1,"\n"],[1,"    \n  "],[0,"        "],[1,"  "],[0,"execMidd"]],"start1":446,"start2":446,"length1":25,"length2":33},{"diffs":[[0,"ddle();\n"],[1,"        }\n        \n"],[0,"        "]],"start1":477,"start2":477,"length1":16,"length2":35}]],"length":762,"saved":false}
{"ts":1374588725722,"patch":[[{"diffs":[[0,"索引\n            \n"],[1,"            // 执行这个函数时，会自动执行下一个middle插件。\n            function next(){\n                \n            }\n            \n"],[0,"            // 执"]],"start1":323,"start2":323,"length1":32,"length2":146}]],"length":876,"saved":false}
{"ts":1374588731219,"patch":[[{"diffs":[[0,"(req,res"],[-1,")"],[1,",next);"],[0,"\n       "]],"start1":536,"start2":536,"length1":17,"length2":23}]],"length":882,"saved":false}
{"ts":1374588732416,"patch":[[{"diffs":[[0,"ddle插件。\n"],[1,"            /\n"],[0,"        "]],"start1":372,"start2":372,"length1":16,"length2":30}]],"length":896,"saved":false}
{"ts":1374588759753,"patch":[[{"diffs":[[0,"       /"],[1,"/ 至于这个函数的执行，是由插件所控制。"],[0,"\n       "]],"start1":385,"start2":385,"length1":16,"length2":36}]],"length":916,"saved":false}
{"ts":1374588958982,"patch":[[{"diffs":[[0,",res){\n        \n"],[1,"    \n"],[0,"        if(middl"]],"start1":152,"start2":152,"length1":32,"length2":37},{"diffs":[[0,"=== 0){\n"],[-1,""],[0,"        "]],"start1":202,"start2":202,"length1":16,"length2":16},{"diffs":[[0,"件索引\n            "],[1,"\n\n            \n            execMiddle();\n            "],[0,"\n            // "]],"start1":327,"start2":327,"length1":32,"length2":85},{"diffs":[[0,"                "],[1,"middleIndex += 1;\n                e"],[0,"\n            }\n "]],"start1":501,"start2":501,"length1":32,"length2":67},{"diffs":[[0,");\n            }"],[-1,"\n    "],[0,"        \n       "]],"start1":676,"start2":676,"length1":37,"length2":32},{"diffs":[[0,"            "],[-1,"execMiddle();"],[0,"\n        }\n "]],"start1":701,"start2":701,"length1":37,"length2":24}]],"length":991,"saved":false}
{"ts":1374588965039,"patch":[[{"diffs":[[0,"       e"],[1,"xecMiddle();"],[0,"\n       "]],"start1":544,"start2":544,"length1":16,"length2":28}]],"length":1003,"saved":false}
{"ts":1374588986921,"patch":[[{"diffs":[[0,"            "],[1,"var "],[0,"middleList(r"]],"start1":653,"start2":653,"length1":24,"length2":28},{"diffs":[[0,"List"],[-1,"(req,res,next)"],[1,"[middleIndex]"],[0,";\n  "]],"start1":675,"start2":675,"length1":22,"length2":21}]],"length":1006,"saved":false}
{"ts":1374588991261,"patch":[[{"diffs":[[0,"         var"],[1," middle ="],[0," middleList["]],"start1":656,"start2":656,"length1":24,"length2":33}]],"length":1015,"saved":false}
{"ts":1374588998997,"patch":[[{"diffs":[[0,"    "],[-1,"\n\n            "],[0,"\n   "]],"start1":339,"start2":339,"length1":22,"length2":8}]],"length":1001,"saved":false}
{"ts":1374589050301,"patch":[[{"diffs":[[0,"Index];\n"],[1,"                middle(req,res,next);\n"],[0,"        "]],"start1":681,"start2":681,"length1":16,"length2":54}]],"length":1039,"saved":false}
{"ts":1374589065481,"patch":[[{"diffs":[[0,"Index];\n"],[1,"                if(middle){\n    "],[0,"        "]],"start1":681,"start2":681,"length1":16,"length2":48},{"diffs":[[0,",next);\n"],[1,"                }\n"],[0,"        "]],"start1":751,"start2":751,"length1":16,"length2":34}]],"length":1089,"saved":false}
{"ts":1374589740906,"patch":[[{"diffs":[[0,"ttp\");\n\n"],[1,"module.exports = App;\n\n"],[0,"function"]],"start1":21,"start2":21,"length1":16,"length2":39}]],"length":1112,"saved":false}
{"contributors":[],"silentsave":false,"ts":1374716052355,"patch":[[{"diffs":[[0,"le);\n}\n\n"],[1,"App.prototype.get = function(){\n    \n}\n\nApp.prototype.post = function(){\n    \n}\n\n"],[0,"// 监听端口\n"]],"start1":1005,"start2":1005,"length1":16,"length2":97}]],"length":1193,"saved":false}
{"ts":1374716144074,"patch":[[{"diffs":[[0," = [];\n    \n"],[1,"    // DOTOT ,  GET方法的处理函数\n    var getHandle = null;\n    \n"],[0,"    // reque"]],"start1":119,"start2":119,"length1":24,"length2":82}]],"length":1251,"saved":false}
{"ts":1374716186822,"patch":[[{"diffs":[[0," // DOTO"],[-1,"T"],[0," ,  GET方"]],"start1":134,"start2":134,"length1":17,"length2":16},{"diffs":[[0,"Handle ="],[1," this._getHandle = null;\n    \n    // DOTO ,  POST方法的处理函数\n    var postHandle = this._postHandle ="],[0," null;\n "]],"start1":168,"start2":168,"length1":16,"length2":112}]],"length":1346,"saved":false}
{"ts":1374720370635,"patch":[[{"diffs":[[0,"    "],[1,"  "],[0,"// "],[-1,"如果没有功能插件什么都不做。"],[1,"判断是GET还是POST方法\n               switch(req.method){\n                     case \"GET\":\n                           if(getHandle){\n                                 getHandle(req,res);\n                           }\n                     break;\n                     case \"POST\":\n                            if(postHandle){\n                                  postHandle(req,res);\n                            }\n                     break;\n               }              "],[0,"\n   "]],"start1":394,"start2":394,"length1":25,"length2":469}]],"length":1790,"saved":false}
{"ts":1374720416547,"patch":[[{"diffs":[[0," = function("],[1,"handle"],[0,"){\n    "],[1,"this._getHandle = handle;"],[0,"\n}\n\nApp.prot"]],"start1":1627,"start2":1627,"length1":31,"length2":62},{"diffs":[[0,"unction("],[1,"handle"],[0,"){\n    "],[1,"this._postHandle = handle;"],[0,"\n}\n\n// 监"]],"start1":1703,"start2":1703,"length1":23,"length2":55}]],"length":1853,"saved":false}
{"ts":1374720486134,"patch":[[{"diffs":[[0,"=== 0){\n"],[1,"            console.log(\"dddddddddddd\")\n"],[0,"        "]],"start1":378,"start2":378,"length1":16,"length2":56}]],"length":1893,"saved":false}
{"ts":1374720675763,"patch":[[{"diffs":[[0,"0){\n"],[-1,"            console.log(\"dddddddddddd\")\n"],[0,"    "]],"start1":382,"start2":382,"length1":48,"length2":8}]],"length":1853,"saved":false}
{"ts":1374720732889,"patch":[[{"diffs":[[0,",next);\n"],[1,"                }else{\n                    \n"],[0,"        "]],"start1":1371,"start2":1371,"length1":16,"length2":60}]],"length":1897,"saved":false}
{"ts":1374720756741,"patch":[[{"diffs":[[0," 0){"],[-1,"\n              // 判断是GET还是POST方法\n               switch(req.method){\n                     case \"GET\":\n                           if(getHandle){\n                                 getHandle(req,res);\n                           }\n                     break;\n                     case \"POST\":\n                            if(postHandle){\n                                  postHandle(req,res);\n                            }\n                     break;\n               }      "],[0,"    "]],"start1":381,"start2":381,"length1":474,"length2":8},{"diffs":[[0,"         }else{\n"],[1,"                  // 判断是GET还是POST方法\n                   switch(req.method){\n                         case \"GET\":\n                               if(getHandle){\n                                     getHandle(req,res);\n                               }\n                         break;\n                         case \"POST\":\n                                if(postHandle){\n                                      postHandle(req,res);\n                                }\n                         break;\n                   }      "],[0,"                "]],"start1":920,"start2":920,"length1":32,"length2":549}]],"length":1948,"saved":false}
{"ts":1374720762054,"patch":[[{"diffs":[[0,"        "],[1," "],[0,"// 判断是GE"]],"start1":946,"start2":946,"length1":16,"length2":17}]],"length":1949,"saved":false}
{"ts":1374720913754,"patch":[[{"diffs":[[0,"         }else{\n"],[1,"                    console.log(11111111)\n"],[0,"                "]],"start1":920,"start2":920,"length1":32,"length2":74}]],"length":1991,"saved":false}
{"ts":1374720946210,"patch":[[{"diffs":[[0,"    "],[-1," console.log(11111111)\n                   // 判断是GET还是POST方法"],[1,"// 判断是GET还是POST方法\n                   console.log(req.method)"],[0,"\n   "]],"start1":951,"start2":951,"length1":67,"length2":68}]],"length":1992,"saved":false}
{"ts":1374720978820,"patch":[[{"diffs":[[0,"T方法\n"],[-1,"                   console.log(req.method)\n"],[0,"    "]],"start1":969,"start2":969,"length1":51,"length2":8}]],"length":1949,"saved":false}
{"ts":1374720986579,"patch":[[{"diffs":[[0,"case \"GET\":\n"],[1,"                             console.log(\"GGG\")\n"],[0,"            "]],"start1":1037,"start2":1037,"length1":24,"length2":72}]],"length":1997,"saved":false}
{"ts":1374721030257,"patch":[[{"diffs":[[0,"\n   "],[-1," var getHandle ="],[0," thi"]],"start1":156,"start2":156,"length1":24,"length2":8},{"diffs":[[0,"\n   "],[-1," var postHandle ="],[0," thi"]],"start1":216,"start2":216,"length1":25,"length2":8},{"diffs":[[0,"T\":\n"],[-1,"                             console.log(\"GGG\")\n"],[0,"    "]],"start1":1012,"start2":1012,"length1":56,"length2":8}]],"length":1916,"saved":false}
{"ts":1374721071847,"patch":[[{"diffs":[[0," = [];\n    \n"],[1,"    var self = this;\n"],[0,"    // DOTO "]],"start1":119,"start2":119,"length1":24,"length2":45},{"diffs":[[0,"     if("],[1,"this._"],[0,"getHandl"]],"start1":1063,"start2":1063,"length1":16,"length2":22}]],"length":1943,"saved":false}
{"ts":1374721119416,"patch":[[{"diffs":[[0,"     if("],[-1,"this"],[1,"self"],[0,"._getHan"]],"start1":1063,"start2":1063,"length1":20,"length2":20},{"diffs":[[0,"        "],[-1," "],[1,"self._"],[0,"getHandl"]],"start1":1117,"start2":1117,"length1":17,"length2":22},{"diffs":[[0,"     if("],[1,"self._"],[0,"postHand"]],"start1":1281,"start2":1281,"length1":16,"length2":22},{"diffs":[[0,"        "],[1,"self._"],[0,"postHand"]],"start1":1338,"start2":1338,"length1":16,"length2":22}]],"length":1960,"saved":false}
